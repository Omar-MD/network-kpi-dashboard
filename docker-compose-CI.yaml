services:
  jenkins:
    image: jenkins/jenkins:lts-jdk11
    user: root
    privileged: true
    environment:
      - SONARQUBE_URL=http://sonarqube:9000
      - JAVA_OPTS=-Dhudson.plugins.git.GitSCM.ALLOW_LOCAL_CHECKOUT=true
      - SONAR_TOKEN=sqa_367e24b5b41d046ce538490ee1cf2c86168077a4
    ports:
      - "8089:8080"
      - "50000:50000"
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - .:/network-kpi-dashboard
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-sonar-network
    command: >
      bash -c '
      for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do
        apt-get remove -y $pkg;
      done &&
      apt-get update &&
      apt-get install -y \
        ca-certificates \
        curl &&
      install -m 0755 -d /etc/apt/keyrings &&
      curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc &&
      chmod a+r /etc/apt/keyrings/docker.asc &&
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null &&
      apt-get update &&
      apt-get install -y docker-ce-cli docker-compose &&
      exec java -jar /usr/share/jenkins/jenkins.war'
  
  sonarqube:
    image: sonarqube:9-community
    environment:
      - sonar.forceAuthentication=false
    ports:
      - "9000:9000"
    volumes:
      - ./sonarqube_data:/opt/sonarqube/data
      - ./sonarqube_conf:/opt/sonarqube/conf
    networks:
      - jenkins-sonar-network

networks:
  jenkins-sonar-network:
    driver: bridge