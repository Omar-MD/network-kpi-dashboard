services:

  #  --------- KAFKA -----------
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper        
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID:1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      timeout: 10s  
      interval: 10s 
      retries: 5

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997

  #  --------- MySQL DB -----------
  mysql:
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: network_node_kpi
      MYSQL_USER: admin
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      interval: 10s
      retries: 5
    
  adminer:
    image: adminer
    container_name: db_adminer
    ports:
      - 8085:8080

  #  --------- Consumer -----------
  kpi-consumer:
    image: omar0md/kpi-consumer
    container_name: kpi-consumer
    build:
      context: ./kpi-consumer
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: "wget --tries=1 -q -O - localhost:8080/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5

  #  --------- Producer -----------
  kpi-producer:
    image: omar0md/kpi-producer
    container_name: kpi-producer
    build:
      context: ./kpi-producer
    ports:
      - "8082:8082"
    depends_on:
      kpi-consumer:
        condition: service_healthy

  kpi-dashboard:
    image: omar0md/kpi-dashboard
    container_name: kpi-dashboard
    build:
      context: ./kpi-dashboard
    ports:
      - "8081:8081"
    depends_on:
      kpi-consumer:
        condition: service_healthy